/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers';
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';

interface KyberStorageInterface extends ethers.utils.Interface {
  functions: {
    'addKyberProxy(address,uint256)': FunctionFragment;
    'getEntitledRebateData(bytes32[])': FunctionFragment;
    'getFeeAccountedData(bytes32[])': FunctionFragment;
    'getKyberProxies()': FunctionFragment;
    'getRebateWalletsFromIds(bytes32[])': FunctionFragment;
    'getReserveAddressesByReserveId(bytes32)': FunctionFragment;
    'getReserveAddressesFromIds(bytes32[])': FunctionFragment;
    'getReserveAddressesPerTokenSrc(address,uint256,uint256)': FunctionFragment;
    'getReserveDetailsByAddress(address)': FunctionFragment;
    'getReserveDetailsById(bytes32)': FunctionFragment;
    'getReserveId(address)': FunctionFragment;
    'getReserveIdsFromAddresses(address[])': FunctionFragment;
    'getReserveIdsPerTokenDest(address)': FunctionFragment;
    'getReserveIdsPerTokenSrc(address)': FunctionFragment;
    'getReservesData(bytes32[],address,address)': FunctionFragment;
    'isKyberProxyAdded()': FunctionFragment;
    'removeKyberProxy(address)': FunctionFragment;
    'setContracts(address,address)': FunctionFragment;
    'setKyberDaoContract(address)': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'addKyberProxy',
    values: [string, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'getEntitledRebateData',
    values: [BytesLike[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getFeeAccountedData',
    values: [BytesLike[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getKyberProxies',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getRebateWalletsFromIds',
    values: [BytesLike[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveAddressesByReserveId',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveAddressesFromIds',
    values: [BytesLike[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveAddressesPerTokenSrc',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveDetailsByAddress',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveDetailsById',
    values: [BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveId',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveIdsFromAddresses',
    values: [string[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveIdsPerTokenDest',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReserveIdsPerTokenSrc',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getReservesData',
    values: [BytesLike[], string, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'isKyberProxyAdded',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'removeKyberProxy',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'setContracts',
    values: [string, string],
  ): string;
  encodeFunctionData(
    functionFragment: 'setKyberDaoContract',
    values: [string],
  ): string;

  decodeFunctionResult(
    functionFragment: 'addKyberProxy',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getEntitledRebateData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getFeeAccountedData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getKyberProxies',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getRebateWalletsFromIds',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveAddressesByReserveId',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveAddressesFromIds',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveAddressesPerTokenSrc',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveDetailsByAddress',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveDetailsById',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveId',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveIdsFromAddresses',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveIdsPerTokenDest',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReserveIdsPerTokenSrc',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getReservesData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'isKyberProxyAdded',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'removeKyberProxy',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setContracts',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setKyberDaoContract',
    data: BytesLike,
  ): Result;

  events: {};
}

export class KyberStorage extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: KyberStorageInterface;

  functions: {
    addKyberProxy(
      kyberProxy: string,
      maxApprovedProxies: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'addKyberProxy(address,uint256)'(
      kyberProxy: string,
      maxApprovedProxies: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    getEntitledRebateData(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<{
      entitledRebateArr: boolean[];
      0: boolean[];
    }>;

    'getEntitledRebateData(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<{
      entitledRebateArr: boolean[];
      0: boolean[];
    }>;

    getFeeAccountedData(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<{
      feeAccountedArr: boolean[];
      0: boolean[];
    }>;

    'getFeeAccountedData(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<{
      feeAccountedArr: boolean[];
      0: boolean[];
    }>;

    getKyberProxies(
      overrides?: CallOverrides,
    ): Promise<{
      0: string[];
    }>;

    'getKyberProxies()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: string[];
    }>;

    getRebateWalletsFromIds(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<{
      rebateWallets: string[];
      0: string[];
    }>;

    'getRebateWalletsFromIds(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<{
      rebateWallets: string[];
      0: string[];
    }>;

    getReserveAddressesByReserveId(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddresses: string[];
      0: string[];
    }>;

    'getReserveAddressesByReserveId(bytes32)'(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddresses: string[];
      0: string[];
    }>;

    getReserveAddressesFromIds(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddresses: string[];
      0: string[];
    }>;

    'getReserveAddressesFromIds(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddresses: string[];
      0: string[];
    }>;

    getReserveAddressesPerTokenSrc(
      token: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddresses: string[];
      0: string[];
    }>;

    'getReserveAddressesPerTokenSrc(address,uint256,uint256)'(
      token: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddresses: string[];
      0: string[];
    }>;

    getReserveDetailsByAddress(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveId: string;
      rebateWallet: string;
      resType: number;
      isFeeAccountedFlag: boolean;
      isEntitledRebateFlag: boolean;
      0: string;
      1: string;
      2: number;
      3: boolean;
      4: boolean;
    }>;

    'getReserveDetailsByAddress(address)'(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveId: string;
      rebateWallet: string;
      resType: number;
      isFeeAccountedFlag: boolean;
      isEntitledRebateFlag: boolean;
      0: string;
      1: string;
      2: number;
      3: boolean;
      4: boolean;
    }>;

    getReserveDetailsById(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddress: string;
      rebateWallet: string;
      resType: number;
      isFeeAccountedFlag: boolean;
      isEntitledRebateFlag: boolean;
      0: string;
      1: string;
      2: number;
      3: boolean;
      4: boolean;
    }>;

    'getReserveDetailsById(bytes32)'(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddress: string;
      rebateWallet: string;
      resType: number;
      isFeeAccountedFlag: boolean;
      isEntitledRebateFlag: boolean;
      0: string;
      1: string;
      2: number;
      3: boolean;
      4: boolean;
    }>;

    getReserveId(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveId: string;
      0: string;
    }>;

    'getReserveId(address)'(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveId: string;
      0: string;
    }>;

    getReserveIdsFromAddresses(
      reserveAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<{
      reserveIds: string[];
      0: string[];
    }>;

    'getReserveIdsFromAddresses(address[])'(
      reserveAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<{
      reserveIds: string[];
      0: string[];
    }>;

    getReserveIdsPerTokenDest(
      token: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveIds: string[];
      0: string[];
    }>;

    'getReserveIdsPerTokenDest(address)'(
      token: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveIds: string[];
      0: string[];
    }>;

    getReserveIdsPerTokenSrc(
      token: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveIds: string[];
      0: string[];
    }>;

    'getReserveIdsPerTokenSrc(address)'(
      token: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveIds: string[];
      0: string[];
    }>;

    getReservesData(
      reserveIds: BytesLike[],
      src: string,
      dest: string,
      overrides?: CallOverrides,
    ): Promise<{
      areAllReservesListed: boolean;
      feeAccountedArr: boolean[];
      entitledRebateArr: boolean[];
      reserveAddresses: string[];
      0: boolean;
      1: boolean[];
      2: boolean[];
      3: string[];
    }>;

    'getReservesData(bytes32[],address,address)'(
      reserveIds: BytesLike[],
      src: string,
      dest: string,
      overrides?: CallOverrides,
    ): Promise<{
      areAllReservesListed: boolean;
      feeAccountedArr: boolean[];
      entitledRebateArr: boolean[];
      reserveAddresses: string[];
      0: boolean;
      1: boolean[];
      2: boolean[];
      3: string[];
    }>;

    isKyberProxyAdded(
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean;
    }>;

    'isKyberProxyAdded()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean;
    }>;

    removeKyberProxy(
      kyberProxy: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'removeKyberProxy(address)'(
      kyberProxy: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    setContracts(
      _kyberFeeHandler: string,
      _kyberMatchingEngine: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'setContracts(address,address)'(
      _kyberFeeHandler: string,
      _kyberMatchingEngine: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    setKyberDaoContract(
      _kyberDao: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'setKyberDaoContract(address)'(
      _kyberDao: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;
  };

  addKyberProxy(
    kyberProxy: string,
    maxApprovedProxies: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'addKyberProxy(address,uint256)'(
    kyberProxy: string,
    maxApprovedProxies: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  getEntitledRebateData(
    reserveIds: BytesLike[],
    overrides?: CallOverrides,
  ): Promise<boolean[]>;

  'getEntitledRebateData(bytes32[])'(
    reserveIds: BytesLike[],
    overrides?: CallOverrides,
  ): Promise<boolean[]>;

  getFeeAccountedData(
    reserveIds: BytesLike[],
    overrides?: CallOverrides,
  ): Promise<boolean[]>;

  'getFeeAccountedData(bytes32[])'(
    reserveIds: BytesLike[],
    overrides?: CallOverrides,
  ): Promise<boolean[]>;

  getKyberProxies(overrides?: CallOverrides): Promise<string[]>;

  'getKyberProxies()'(overrides?: CallOverrides): Promise<string[]>;

  getRebateWalletsFromIds(
    reserveIds: BytesLike[],
    overrides?: CallOverrides,
  ): Promise<string[]>;

  'getRebateWalletsFromIds(bytes32[])'(
    reserveIds: BytesLike[],
    overrides?: CallOverrides,
  ): Promise<string[]>;

  getReserveAddressesByReserveId(
    reserveId: BytesLike,
    overrides?: CallOverrides,
  ): Promise<string[]>;

  'getReserveAddressesByReserveId(bytes32)'(
    reserveId: BytesLike,
    overrides?: CallOverrides,
  ): Promise<string[]>;

  getReserveAddressesFromIds(
    reserveIds: BytesLike[],
    overrides?: CallOverrides,
  ): Promise<string[]>;

  'getReserveAddressesFromIds(bytes32[])'(
    reserveIds: BytesLike[],
    overrides?: CallOverrides,
  ): Promise<string[]>;

  getReserveAddressesPerTokenSrc(
    token: string,
    startIndex: BigNumberish,
    endIndex: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string[]>;

  'getReserveAddressesPerTokenSrc(address,uint256,uint256)'(
    token: string,
    startIndex: BigNumberish,
    endIndex: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string[]>;

  getReserveDetailsByAddress(
    reserve: string,
    overrides?: CallOverrides,
  ): Promise<{
    reserveId: string;
    rebateWallet: string;
    resType: number;
    isFeeAccountedFlag: boolean;
    isEntitledRebateFlag: boolean;
    0: string;
    1: string;
    2: number;
    3: boolean;
    4: boolean;
  }>;

  'getReserveDetailsByAddress(address)'(
    reserve: string,
    overrides?: CallOverrides,
  ): Promise<{
    reserveId: string;
    rebateWallet: string;
    resType: number;
    isFeeAccountedFlag: boolean;
    isEntitledRebateFlag: boolean;
    0: string;
    1: string;
    2: number;
    3: boolean;
    4: boolean;
  }>;

  getReserveDetailsById(
    reserveId: BytesLike,
    overrides?: CallOverrides,
  ): Promise<{
    reserveAddress: string;
    rebateWallet: string;
    resType: number;
    isFeeAccountedFlag: boolean;
    isEntitledRebateFlag: boolean;
    0: string;
    1: string;
    2: number;
    3: boolean;
    4: boolean;
  }>;

  'getReserveDetailsById(bytes32)'(
    reserveId: BytesLike,
    overrides?: CallOverrides,
  ): Promise<{
    reserveAddress: string;
    rebateWallet: string;
    resType: number;
    isFeeAccountedFlag: boolean;
    isEntitledRebateFlag: boolean;
    0: string;
    1: string;
    2: number;
    3: boolean;
    4: boolean;
  }>;

  getReserveId(reserve: string, overrides?: CallOverrides): Promise<string>;

  'getReserveId(address)'(
    reserve: string,
    overrides?: CallOverrides,
  ): Promise<string>;

  getReserveIdsFromAddresses(
    reserveAddresses: string[],
    overrides?: CallOverrides,
  ): Promise<string[]>;

  'getReserveIdsFromAddresses(address[])'(
    reserveAddresses: string[],
    overrides?: CallOverrides,
  ): Promise<string[]>;

  getReserveIdsPerTokenDest(
    token: string,
    overrides?: CallOverrides,
  ): Promise<string[]>;

  'getReserveIdsPerTokenDest(address)'(
    token: string,
    overrides?: CallOverrides,
  ): Promise<string[]>;

  getReserveIdsPerTokenSrc(
    token: string,
    overrides?: CallOverrides,
  ): Promise<string[]>;

  'getReserveIdsPerTokenSrc(address)'(
    token: string,
    overrides?: CallOverrides,
  ): Promise<string[]>;

  getReservesData(
    reserveIds: BytesLike[],
    src: string,
    dest: string,
    overrides?: CallOverrides,
  ): Promise<{
    areAllReservesListed: boolean;
    feeAccountedArr: boolean[];
    entitledRebateArr: boolean[];
    reserveAddresses: string[];
    0: boolean;
    1: boolean[];
    2: boolean[];
    3: string[];
  }>;

  'getReservesData(bytes32[],address,address)'(
    reserveIds: BytesLike[],
    src: string,
    dest: string,
    overrides?: CallOverrides,
  ): Promise<{
    areAllReservesListed: boolean;
    feeAccountedArr: boolean[];
    entitledRebateArr: boolean[];
    reserveAddresses: string[];
    0: boolean;
    1: boolean[];
    2: boolean[];
    3: string[];
  }>;

  isKyberProxyAdded(overrides?: CallOverrides): Promise<boolean>;

  'isKyberProxyAdded()'(overrides?: CallOverrides): Promise<boolean>;

  removeKyberProxy(
    kyberProxy: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'removeKyberProxy(address)'(
    kyberProxy: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  setContracts(
    _kyberFeeHandler: string,
    _kyberMatchingEngine: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setContracts(address,address)'(
    _kyberFeeHandler: string,
    _kyberMatchingEngine: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  setKyberDaoContract(
    _kyberDao: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setKyberDaoContract(address)'(
    _kyberDao: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  callStatic: {
    addKyberProxy(
      kyberProxy: string,
      maxApprovedProxies: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'addKyberProxy(address,uint256)'(
      kyberProxy: string,
      maxApprovedProxies: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    getEntitledRebateData(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<boolean[]>;

    'getEntitledRebateData(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<boolean[]>;

    getFeeAccountedData(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<boolean[]>;

    'getFeeAccountedData(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<boolean[]>;

    getKyberProxies(overrides?: CallOverrides): Promise<string[]>;

    'getKyberProxies()'(overrides?: CallOverrides): Promise<string[]>;

    getRebateWalletsFromIds(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<string[]>;

    'getRebateWalletsFromIds(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<string[]>;

    getReserveAddressesByReserveId(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string[]>;

    'getReserveAddressesByReserveId(bytes32)'(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string[]>;

    getReserveAddressesFromIds(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<string[]>;

    'getReserveAddressesFromIds(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<string[]>;

    getReserveAddressesPerTokenSrc(
      token: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string[]>;

    'getReserveAddressesPerTokenSrc(address,uint256,uint256)'(
      token: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string[]>;

    getReserveDetailsByAddress(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveId: string;
      rebateWallet: string;
      resType: number;
      isFeeAccountedFlag: boolean;
      isEntitledRebateFlag: boolean;
      0: string;
      1: string;
      2: number;
      3: boolean;
      4: boolean;
    }>;

    'getReserveDetailsByAddress(address)'(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<{
      reserveId: string;
      rebateWallet: string;
      resType: number;
      isFeeAccountedFlag: boolean;
      isEntitledRebateFlag: boolean;
      0: string;
      1: string;
      2: number;
      3: boolean;
      4: boolean;
    }>;

    getReserveDetailsById(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddress: string;
      rebateWallet: string;
      resType: number;
      isFeeAccountedFlag: boolean;
      isEntitledRebateFlag: boolean;
      0: string;
      1: string;
      2: number;
      3: boolean;
      4: boolean;
    }>;

    'getReserveDetailsById(bytes32)'(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<{
      reserveAddress: string;
      rebateWallet: string;
      resType: number;
      isFeeAccountedFlag: boolean;
      isEntitledRebateFlag: boolean;
      0: string;
      1: string;
      2: number;
      3: boolean;
      4: boolean;
    }>;

    getReserveId(reserve: string, overrides?: CallOverrides): Promise<string>;

    'getReserveId(address)'(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<string>;

    getReserveIdsFromAddresses(
      reserveAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<string[]>;

    'getReserveIdsFromAddresses(address[])'(
      reserveAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<string[]>;

    getReserveIdsPerTokenDest(
      token: string,
      overrides?: CallOverrides,
    ): Promise<string[]>;

    'getReserveIdsPerTokenDest(address)'(
      token: string,
      overrides?: CallOverrides,
    ): Promise<string[]>;

    getReserveIdsPerTokenSrc(
      token: string,
      overrides?: CallOverrides,
    ): Promise<string[]>;

    'getReserveIdsPerTokenSrc(address)'(
      token: string,
      overrides?: CallOverrides,
    ): Promise<string[]>;

    getReservesData(
      reserveIds: BytesLike[],
      src: string,
      dest: string,
      overrides?: CallOverrides,
    ): Promise<{
      areAllReservesListed: boolean;
      feeAccountedArr: boolean[];
      entitledRebateArr: boolean[];
      reserveAddresses: string[];
      0: boolean;
      1: boolean[];
      2: boolean[];
      3: string[];
    }>;

    'getReservesData(bytes32[],address,address)'(
      reserveIds: BytesLike[],
      src: string,
      dest: string,
      overrides?: CallOverrides,
    ): Promise<{
      areAllReservesListed: boolean;
      feeAccountedArr: boolean[];
      entitledRebateArr: boolean[];
      reserveAddresses: string[];
      0: boolean;
      1: boolean[];
      2: boolean[];
      3: string[];
    }>;

    isKyberProxyAdded(overrides?: CallOverrides): Promise<boolean>;

    'isKyberProxyAdded()'(overrides?: CallOverrides): Promise<boolean>;

    removeKyberProxy(
      kyberProxy: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'removeKyberProxy(address)'(
      kyberProxy: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    setContracts(
      _kyberFeeHandler: string,
      _kyberMatchingEngine: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'setContracts(address,address)'(
      _kyberFeeHandler: string,
      _kyberMatchingEngine: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    setKyberDaoContract(
      _kyberDao: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'setKyberDaoContract(address)'(
      _kyberDao: string,
      overrides?: CallOverrides,
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addKyberProxy(
      kyberProxy: string,
      maxApprovedProxies: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'addKyberProxy(address,uint256)'(
      kyberProxy: string,
      maxApprovedProxies: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    getEntitledRebateData(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getEntitledRebateData(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getFeeAccountedData(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getFeeAccountedData(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getKyberProxies(overrides?: CallOverrides): Promise<BigNumber>;

    'getKyberProxies()'(overrides?: CallOverrides): Promise<BigNumber>;

    getRebateWalletsFromIds(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getRebateWalletsFromIds(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveAddressesByReserveId(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveAddressesByReserveId(bytes32)'(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveAddressesFromIds(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveAddressesFromIds(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveAddressesPerTokenSrc(
      token: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveAddressesPerTokenSrc(address,uint256,uint256)'(
      token: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveDetailsByAddress(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveDetailsByAddress(address)'(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveDetailsById(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveDetailsById(bytes32)'(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveId(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveId(address)'(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveIdsFromAddresses(
      reserveAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveIdsFromAddresses(address[])'(
      reserveAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveIdsPerTokenDest(
      token: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveIdsPerTokenDest(address)'(
      token: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReserveIdsPerTokenSrc(
      token: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReserveIdsPerTokenSrc(address)'(
      token: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getReservesData(
      reserveIds: BytesLike[],
      src: string,
      dest: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getReservesData(bytes32[],address,address)'(
      reserveIds: BytesLike[],
      src: string,
      dest: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    isKyberProxyAdded(overrides?: CallOverrides): Promise<BigNumber>;

    'isKyberProxyAdded()'(overrides?: CallOverrides): Promise<BigNumber>;

    removeKyberProxy(
      kyberProxy: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'removeKyberProxy(address)'(
      kyberProxy: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    setContracts(
      _kyberFeeHandler: string,
      _kyberMatchingEngine: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'setContracts(address,address)'(
      _kyberFeeHandler: string,
      _kyberMatchingEngine: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    setKyberDaoContract(
      _kyberDao: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'setKyberDaoContract(address)'(
      _kyberDao: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addKyberProxy(
      kyberProxy: string,
      maxApprovedProxies: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'addKyberProxy(address,uint256)'(
      kyberProxy: string,
      maxApprovedProxies: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    getEntitledRebateData(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getEntitledRebateData(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getFeeAccountedData(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getFeeAccountedData(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getKyberProxies(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'getKyberProxies()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getRebateWalletsFromIds(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getRebateWalletsFromIds(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveAddressesByReserveId(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveAddressesByReserveId(bytes32)'(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveAddressesFromIds(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveAddressesFromIds(bytes32[])'(
      reserveIds: BytesLike[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveAddressesPerTokenSrc(
      token: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveAddressesPerTokenSrc(address,uint256,uint256)'(
      token: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveDetailsByAddress(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveDetailsByAddress(address)'(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveDetailsById(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveDetailsById(bytes32)'(
      reserveId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveId(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveId(address)'(
      reserve: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveIdsFromAddresses(
      reserveAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveIdsFromAddresses(address[])'(
      reserveAddresses: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveIdsPerTokenDest(
      token: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveIdsPerTokenDest(address)'(
      token: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReserveIdsPerTokenSrc(
      token: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReserveIdsPerTokenSrc(address)'(
      token: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getReservesData(
      reserveIds: BytesLike[],
      src: string,
      dest: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getReservesData(bytes32[],address,address)'(
      reserveIds: BytesLike[],
      src: string,
      dest: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    isKyberProxyAdded(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'isKyberProxyAdded()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    removeKyberProxy(
      kyberProxy: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'removeKyberProxy(address)'(
      kyberProxy: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    setContracts(
      _kyberFeeHandler: string,
      _kyberMatchingEngine: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'setContracts(address,address)'(
      _kyberFeeHandler: string,
      _kyberMatchingEngine: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    setKyberDaoContract(
      _kyberDao: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'setKyberDaoContract(address)'(
      _kyberDao: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;
  };
}
